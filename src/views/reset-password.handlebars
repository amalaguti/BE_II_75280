<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Restablecer contraseña</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      background: linear-gradient(135deg, #f0f4f8, #d9e2ec);
      font-family: 'Segoe UI', sans-serif;
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100vh;
    }
    .reset-container {
      background-color: white;
      padding: 40px;
      border-radius: 16px;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 400px;
      text-align: center;
    }
    h2 {
      margin-bottom: 24px;
      color: #333;
    }
    .error-message {
      color: #dc3545;
      background-color: #f8d7da;
      border: 1px solid #f5c6cb;
      padding: 10px;
      border-radius: 8px;
      margin-bottom: 16px;
      display: none;
    }
    .success-message {
      color: #155724;
      background-color: #d4edda;
      border: 1px solid #c3e6cb;
      padding: 10px;
      border-radius: 8px;
      margin-bottom: 16px;
      display: none;
    }
    input[type="password"], input[type="email"] {
      width: 100%;
      padding: 12px 16px;
      margin-bottom: 16px;
      border: 1px solid #ccc;
      border-radius: 8px;
      font-size: 16px;
      transition: border-color 0.3s;
      box-sizing: border-box;
    }
    input:focus {
      border-color: #4a90e2;
      outline: none;
    }
    button {
      width: 100%;
      padding: 12px 16px;
      background-color: #4a90e2;
      color: white;
      font-size: 16px;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: background-color 0.3s;
    }
    button:hover {
      background-color: #357ab8;
    }
    button:disabled {
      background-color: #ccc;
      cursor: not-allowed;
    }
  </style>
</head>
<body>
  <div class="reset-container">
    <h2>Restablecer contraseña</h2>
    <div id="error-message" class="error-message"></div>
    <div id="success-message" class="success-message"></div>
    <form id="email-form" style="display:none;">
      <input type="email" name="email" placeholder="Tu email" required />
      <button type="submit" id="email-btn">Enviar enlace</button>
    </form>
    <form id="reset-form" style="display:none;">
      <input type="password" name="newPassword" placeholder="Nueva contraseña" required />
      <input type="hidden" name="token" id="token-field" />
      <button type="submit" id="reset-btn">Restablecer</button>
    </form>
  </div>
  <script>
    const urlParams = new URLSearchParams(window.location.search);
    const token = urlParams.get('token');
    const emailForm = document.getElementById('email-form');
    const resetForm = document.getElementById('reset-form');
    const errorDiv = document.getElementById('error-message');
    const successDiv = document.getElementById('success-message');

    if (token) {
      // Show reset password form
      resetForm.style.display = '';
      document.getElementById('token-field').value = token;
    } else {
      // Show email form
      emailForm.style.display = '';
    }

    emailForm && emailForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target);
      const email = formData.get('email');
      const emailBtn = document.getElementById('email-btn');
      errorDiv.style.display = 'none';
      successDiv.style.display = 'none';
      emailBtn.disabled = true;
      emailBtn.textContent = 'Enviando...';
      try {
        const response = await fetch('/api/auth/forgot-password', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email })
        });
        const data = await response.json();
        if (response.ok) {
          successDiv.textContent = 'Si el email existe, se ha enviado un enlace para restablecer la contraseña.';
          successDiv.style.display = 'block';
        } else {
          errorDiv.textContent = data.error || 'Error al enviar el email';
          errorDiv.style.display = 'block';
        }
      } catch (err) {
        errorDiv.textContent = 'Error de conexión';
        errorDiv.style.display = 'block';
      } finally {
        emailBtn.disabled = false;
        emailBtn.textContent = 'Enviar enlace';
      }
    });

    resetForm && resetForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target);
      const newPassword = formData.get('newPassword');
      const token = formData.get('token');
      const resetBtn = document.getElementById('reset-btn');
      errorDiv.style.display = 'none';
      successDiv.style.display = 'none';
      resetBtn.disabled = true;
      resetBtn.textContent = 'Procesando...';
      try {
        const response = await fetch('/api/auth/reset-password', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ token, newPassword })
        });
        const data = await response.json();
        if (response.ok) {
          successDiv.textContent = '¡Contraseña restablecida exitosamente!';
          successDiv.style.display = 'block';
          setTimeout(() => {
            window.location.href = '/users/login';
          }, 2000);
        } else {
          errorDiv.textContent = data.error || 'Error al restablecer la contraseña';
          errorDiv.style.display = 'block';
        }
      } catch (err) {
        errorDiv.textContent = 'Error de conexión';
        errorDiv.style.display = 'block';
      } finally {
        resetBtn.disabled = false;
        resetBtn.textContent = 'Restablecer';
      }
    });
  </script>
</body>
</html>