<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Registro</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      background: linear-gradient(135deg, #f0f4f8, #d9e2ec);
      font-family: 'Segoe UI', sans-serif;
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100vh;
    }

    .register-container {
      background-color: white;
      padding: 40px;
      border-radius: 16px;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 400px;
    }

    h2 {
      margin-bottom: 24px;
      color: #333;
      text-align: center;
    }

    .error-message {
      color: #dc3545;
      background-color: #f8d7da;
      border: 1px solid #f5c6cb;
      padding: 10px;
      border-radius: 8px;
      margin-bottom: 16px;
      display: none;
    }

    .success-message {
      color: #155724;
      background-color: #d4edda;
      border: 1px solid #c3e6cb;
      padding: 10px;
      border-radius: 8px;
      margin-bottom: 16px;
      display: none;
    }

    .form-group {
      margin-bottom: 16px;
    }

    .form-group label {
      display: block;
      margin-bottom: 8px;
      color: #333;
      font-weight: 500;
    }

    input {
      width: 100%;
      padding: 12px 16px;
      border: 1px solid #ccc;
      border-radius: 8px;
      font-size: 16px;
      transition: border-color 0.3s;
      box-sizing: border-box;
    }

    input:focus {
      border-color: #4a90e2;
      outline: none;
    }

    button {
      width: 100%;
      padding: 12px 16px;
      background-color: #4a90e2;
      color: white;
      font-size: 16px;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    button:hover {
      background-color: #357ab8;
    }

    button:disabled {
      background-color: #ccc;
      cursor: not-allowed;
    }

    .login-link {
      text-align: center;
      margin-top: 16px;
    }

    .login-link a {
      color: #4a90e2;
      text-decoration: none;
    }

    .login-link a:hover {
      text-decoration: underline;
    }
  </style>
</head>
<body>
  <div class="register-container">
    <h2>Crear cuenta</h2>
    <div id="error-message" class="error-message"></div>
    <div id="success-message" class="success-message"></div>
    <form id="register-form">
      <div class="form-group">
        <label for="first_name">Nombre</label>
        <input type="text" id="first_name" name="first_name" required />
      </div>
      <div class="form-group">
        <label for="last_name">Apellido</label>
        <input type="text" id="last_name" name="last_name" required />
      </div>
      <div class="form-group">
        <label for="email">Email</label>
        <input type="email" id="email" name="email" required />
      </div>
      <div class="form-group">
        <label for="age">Edad</label>
        <input type="number" id="age" name="age" min="18" max="120" required />
        <small style="color: #666; font-size: 0.8rem;">La edad debe estar entre 18 y 120 años</small>
      </div>
      <div class="form-group">
        <label for="password">Contraseña</label>
        <input type="password" id="password" name="password" required />
      </div>
      <button type="submit" id="register-btn">Registrarse</button>
    </form>
    <div class="login-link">
      <p>¿Ya tenés cuenta? <a href="/users/login">Iniciar sesión</a></p>
    </div>
  </div>

  <script>
    document.getElementById('register-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(e.target);
      const age = parseInt(formData.get('age'));
      
      // Client-side validation
      if (age < 18 || age > 120) {
        errorDiv.textContent = 'La edad debe estar entre 18 y 120 años';
        errorDiv.style.display = 'block';
        registerBtn.disabled = false;
        registerBtn.textContent = 'Registrarse';
        return;
      }
      
      const userData = {
        first_name: formData.get('first_name'),
        last_name: formData.get('last_name'),
        email: formData.get('email'),
        age: age,
        password: formData.get('password')
      };
      
      const registerBtn = document.getElementById('register-btn');
      const errorDiv = document.getElementById('error-message');
      const successDiv = document.getElementById('success-message');
      
      // Clear previous messages
      errorDiv.style.display = 'none';
      successDiv.style.display = 'none';
      registerBtn.disabled = true;
      registerBtn.textContent = 'Registrando...';
      
      try {
        const response = await fetch('/api/auth/register', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(userData)
        });
        
        const data = await response.json();
        
        if (response.ok) {
          successDiv.textContent = 'Registro exitoso! Redirigiendo...';
          successDiv.style.display = 'block';
          
          // Redirect to current user page immediately
          window.location.href = '/users/current';
        } else {
          errorDiv.textContent = data.error || 'Error en el registro';
          errorDiv.style.display = 'block';
        }
      } catch (error) {
        errorDiv.textContent = 'Error de conexión';
        errorDiv.style.display = 'block';
      } finally {
        registerBtn.disabled = false;
        registerBtn.textContent = 'Registrarse';
      }
    });
  </script>
</body>
</html>
