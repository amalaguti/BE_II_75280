<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Iniciar sesión</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      background: linear-gradient(135deg, #f0f4f8, #d9e2ec);
      font-family: 'Segoe UI', sans-serif;
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100vh;
    }

    .login-container {
      background-color: white;
      padding: 40px;
      border-radius: 16px;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 400px;
      text-align: center;
    }

    h2 {
      margin-bottom: 24px;
      color: #333;
    }

    .error-message {
      color: #dc3545;
      background-color: #f8d7da;
      border: 1px solid #f5c6cb;
      padding: 10px;
      border-radius: 8px;
      margin-bottom: 16px;
      display: none;
    }

    .success-message {
      color: #155724;
      background-color: #d4edda;
      border: 1px solid #c3e6cb;
      padding: 10px;
      border-radius: 8px;
      margin-bottom: 16px;
      display: none;
    }

    input[type="email"],
    input[type="password"] {
      width: 100%;
      padding: 12px 16px;
      margin-bottom: 16px;
      border: 1px solid #ccc;
      border-radius: 8px;
      font-size: 16px;
      transition: border-color 0.3s;
      box-sizing: border-box;
    }

    input:focus {
      border-color: #4a90e2;
      outline: none;
    }

    button {
      width: 100%;
      padding: 12px 16px;
      background-color: #4a90e2;
      color: white;
      font-size: 16px;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    button:hover {
      background-color: #357ab8;
    }

    button:disabled {
      background-color: #ccc;
      cursor: not-allowed;
    }

    a {
      display: inline-block;
      margin-top: 16px;
      color: #4a90e2;
      text-decoration: none;
    }

    a:hover {
      text-decoration: underline;
    }

    .logged-in-message {
      text-align: center;
      padding: 2rem;
      background-color: #e8f4fd;
      border: 1px solid #bee5eb;
      border-radius: 8px;
      margin-bottom: 1rem;
    }

    .logged-in-message h3 {
      color: #0c5460;
      margin-bottom: 1rem;
    }

    .logged-in-message p {
      color: #0c5460;
      margin-bottom: 0.5rem;
    }

    .logged-in-actions {
      margin-top: 1.5rem;
      display: flex;
      gap: 1rem;
      justify-content: center;
      flex-wrap: wrap;
    }

    .btn-primary, .btn-secondary {
      padding: 0.75rem 1.5rem;
      border-radius: 6px;
      text-decoration: none;
      font-weight: 500;
      transition: all 0.3s;
      border: none;
      cursor: pointer;
      font-size: 14px;
    }

    .btn-primary {
      background-color: #4a90e2;
      color: white;
    }

    .btn-primary:hover {
      background-color: #357ab8;
    }

    .btn-secondary {
      background-color: #6c757d;
      color: white;
    }

    .btn-secondary:hover {
      background-color: #5a6268;
    }
  </style>
</head>
<body>
  <div class="login-container">
    <h2>Iniciar sesión</h2>
    
    {{#if showLoggedInMessage}}
      <div class="logged-in-message">
        <h3>Ya estás logueado</h3>
        <p>Hola <strong>{{loggedInUser.name}}</strong>, ya tienes una sesión activa.</p>
        <p>Si quieres iniciar sesión con otra cuenta, primero debes cerrar sesión.</p>
        <div class="logged-in-actions">
          <a href="/users/current" class="btn-primary">Ir a mi perfil</a>
          <button id="logout-btn" class="btn-secondary">Cerrar sesión</button>
        </div>
      </div>
    {{else}}
      <div id="error-message" class="error-message"></div>
      <div id="success-message" class="success-message"></div>
      <form id="login-form">
        <input type="email" name="email" placeholder="Email" required />
        <input type="password" name="password" placeholder="Contraseña" required />
        <button type="submit" id="login-btn">Entrar</button>
      </form>
      <a href="/users/register">¿No tenés cuenta? Registrate</a>
      <br />
      <a href="/users/reset-password" style="margin-top: 8px; color: #f57c00;">¿Olvidaste tu contraseña?</a>
    {{/if}}
  </div>

  <script>
    {{#unless showLoggedInMessage}}
    // Login form handling (only when user is not logged in)
    document.getElementById('login-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(e.target);
      const email = formData.get('email');
      const password = formData.get('password');
      
      const loginBtn = document.getElementById('login-btn');
      const errorDiv = document.getElementById('error-message');
      const successDiv = document.getElementById('success-message');
      
      // Clear previous messages
      errorDiv.style.display = 'none';
      successDiv.style.display = 'none';
      loginBtn.disabled = true;
      loginBtn.textContent = 'Entrando...';
      
      try {
        const response = await fetch('/api/auth/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email, password })
        });
        
        const data = await response.json();
        
        if (response.ok) {
          successDiv.textContent = 'Login exitoso! Redirigiendo...';
          successDiv.style.display = 'block';
          
          console.log('Login successful, redirecting to current user page...');
          
          // Redirect to current user page immediately
          try {
            window.location.href = '/users/current';
          } catch (redirectError) {
            console.error('Redirect error:', redirectError);
            // Fallback redirect
            window.location.replace('/users/current');
          }
        } else {
          errorDiv.textContent = data.error || 'Error en el login';
          errorDiv.style.display = 'block';
        }
      } catch (error) {
        console.error('Login error:', error);
        errorDiv.textContent = 'Error de conexión';
        errorDiv.style.display = 'block';
      } finally {
        loginBtn.disabled = false;
        loginBtn.textContent = 'Entrar';
      }
    });
    {{/unless}}

    {{#if showLoggedInMessage}}
    // Handle logout button for logged-in users (only if it exists)
    const logoutBtn = document.getElementById('logout-btn');
    if (logoutBtn) {
      logoutBtn.addEventListener('click', async (e) => {
        e.preventDefault();
        
        try {
          await fetch('/api/auth/logout', {
            method: 'POST'
          });
        } catch (error) {
          console.error('Logout error:', error);
        } finally {
          // Redirect to login page (which will now show the login form)
          window.location.href = '/users/login';
        }
      });
    }
    {{/if}}
  </script>
</body>
</html>
